CCS PCM C Compiler, Version 4.104, 5967               21-mar-24 12:20

               Filename: C:\Users\JOICE\OneDrive\Documentos\Faculdade\microcontrolador\atividades\entradaDados\entradaDados.lst

               ROM used: 122 words (1%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         8 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... //#include "C:\Users\JOICE\OneDrive\Documentos\Faculdade\microcontrolador\atividades\entradaDados\entradaDados.h" 
....................  
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   075 (RETURN)
....................  
....................  
.................... void main() 
.................... { 
001A:  CLRF   04
001B:  BCF    03.7
001C:  MOVLW  1F
001D:  ANDWF  03,F
001E:  BSF    03.5
001F:  BSF    1F.0
0020:  BSF    1F.1
0021:  BSF    1F.2
0022:  BCF    1F.3
0023:  MOVLW  07
0024:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
0028:  BSF    03.5
0029:  BSF    1F.0
002A:  BSF    1F.1
002B:  BSF    1F.2
002C:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
002D:  BCF    1F.6
002E:  BCF    03.5
002F:  BCF    1F.6
0030:  BCF    1F.7
0031:  BSF    03.5
0032:  BCF    1F.7
0033:  BCF    03.5
0034:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0035:  BSF    03.5
0036:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0037:  BCF    03.5
0038:  BCF    14.5
0039:  BCF    20.5
003A:  MOVF   20,W
003B:  BSF    03.5
003C:  MOVWF  07
003D:  BCF    03.5
003E:  BSF    20.4
003F:  MOVF   20,W
0040:  BSF    03.5
0041:  MOVWF  07
0042:  BCF    03.5
0043:  BCF    20.3
0044:  MOVF   20,W
0045:  BSF    03.5
0046:  MOVWF  07
0047:  MOVLW  01
0048:  BCF    03.5
0049:  MOVWF  14
004A:  MOVLW  00
004B:  BSF    03.5
004C:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
004D:  MOVF   01,W
004E:  ANDLW  C7
004F:  IORLW  08
0050:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0051:  BCF    03.5
0052:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0053:  MOVLW  00
0054:  MOVWF  78
0055:  MOVWF  12
0056:  MOVLW  00
0057:  BSF    03.5
0058:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0059:  MOVLW  07
005A:  MOVWF  1C
005B:  MOVF   05,W
005C:  MOVWF  05
005D:  MOVLW  10
005E:  MOVWF  77
005F:  DECFSZ 77,F
0060:  GOTO   05F
0061:  NOP
0062:  MOVF   1C,W
0063:  BCF    03.5
0064:  BCF    0D.6
....................    setup_vref(FALSE); 
0065:  BSF    03.5
0066:  CLRF   1D
....................  
....................    while(true){ 
....................     
....................       //Quando pressionar ele não entra, porque o sistema é pull up, portanto é false(pq dá 0), então para entrar terá que negar a entrada 
....................       if(!input(PIN_B2)){ 
0067:  BSF    06.2
0068:  BCF    03.5
0069:  BTFSC  06.2
006A:  GOTO   077
....................          //toggle inverte o estado atual   
....................          output_toggle(PIN_D6); 
006B:  BSF    03.5
006C:  BCF    08.6
006D:  MOVLW  40
006E:  BCF    03.5
006F:  XORWF  08,F
....................          delay_ms(2000); 
0070:  MOVLW  08
0071:  MOVWF  21
0072:  MOVLW  FA
0073:  MOVWF  22
0074:  GOTO   004
0075:  DECFSZ 21,F
0076:  GOTO   072
....................       } 
....................    } 
0077:  BSF    03.5
0078:  GOTO   067
....................  
.................... } 
0079:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
