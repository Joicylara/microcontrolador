CCS PCM C Compiler, Version 4.104, 5967               14-fev-24 19:48

               Filename: C:\Users\JOICE\OneDrive\Documentos\Faculdade\microcontrolador\atividades\seteSeg\seteSegmento.lst

               ROM used: 137 words (2%)
                         Largest free fragment is 2048
               RAM used: 9 (2%) at main() level
                         11 (3%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   049
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES BROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=8000000) 
0035:  MOVLW  25
0036:  MOVWF  04
0037:  BCF    03.7
0038:  MOVF   00,W
0039:  BTFSC  03.2
003A:  GOTO   048
003B:  MOVLW  02
003C:  MOVWF  78
003D:  CLRF   77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  DECFSZ 78,F
0041:  GOTO   03D
0042:  MOVLW  97
0043:  MOVWF  77
0044:  DECFSZ 77,F
0045:  GOTO   044
0046:  DECFSZ 00,F
0047:  GOTO   03B
0048:  RETURN
....................  
.................... byte const unidade[10]={ 
....................     0b11111100, //0 
....................     0b01100000, //1 
....................     0b11011010, //2 
....................     0b11110010, //3 
....................     0b01100110, //4 
....................     0b10110110, //5 
....................     0b10111110, //6 
....................     0b11100000, //7 
....................     0b11111110, //8 
....................     0b11100110  //9 
.................... }; 
....................  
.................... byte const dezena[10]={ 
....................     0b11111110, //0 
....................     0b00110000, //1 
....................     0b11011010, //2 
....................     0b01111010, //3 
....................     0b00110100, //4 
....................     0b01101110, //5 
....................     0b11101110, //6 
....................     0b00111000, //7 
....................     0b11111110, //8 
....................     0b01111110  //9 
.................... }; 
....................  
.................... void main() 
.................... { 
0049:  CLRF   04
004A:  BCF    03.7
004B:  MOVLW  1F
004C:  ANDWF  03,F
004D:  BSF    03.5
004E:  BSF    1F.0
004F:  BSF    1F.1
0050:  BSF    1F.2
0051:  BCF    1F.3
0052:  MOVLW  07
0053:  MOVWF  1C
0054:  BCF    03.5
0055:  CLRF   21
....................     int8 cont = 0; 
....................     int8 d, u; 
....................   
....................     while(true) 
....................     { 
....................         d = cont / 10; 
0056:  MOVF   21,W
0057:  MOVWF  24
0058:  MOVLW  0A
0059:  MOVWF  25
005A:  CALL   020
005B:  MOVF   78,W
005C:  MOVWF  22
....................         u = cont % 10; 
005D:  MOVF   21,W
005E:  MOVWF  24
005F:  MOVLW  0A
0060:  MOVWF  25
0061:  CALL   020
0062:  MOVF   77,W
0063:  MOVWF  23
....................  
....................         output_B(dezena[d]); 
0064:  MOVF   22,W
0065:  CALL   012
0066:  MOVWF  24
0067:  BSF    03.5
0068:  CLRF   06
0069:  BCF    03.5
006A:  MOVF   24,W
006B:  MOVWF  06
....................         delay_ms(500); 
006C:  MOVLW  02
006D:  MOVWF  24
006E:  MOVLW  FA
006F:  MOVWF  25
0070:  CALL   035
0071:  DECFSZ 24,F
0072:  GOTO   06E
....................         output_B(unidade[u]); 
0073:  MOVF   23,W
0074:  CALL   004
0075:  MOVWF  24
0076:  BSF    03.5
0077:  CLRF   06
0078:  BCF    03.5
0079:  MOVF   24,W
007A:  MOVWF  06
....................         delay_ms(500);  
007B:  MOVLW  02
007C:  MOVWF  24
007D:  MOVLW  FA
007E:  MOVWF  25
007F:  CALL   035
0080:  DECFSZ 24,F
0081:  GOTO   07D
....................          
....................         cont++; 
0082:  INCF   21,F
....................         if (cont > 10) 
0083:  MOVF   21,W
0084:  SUBLW  0A
0085:  BTFSS  03.0
....................             cont = 0; 
0086:  CLRF   21
....................     } 
0087:  GOTO   056
.................... } 
....................  
0088:  SLEEP

Configuration Fuses:
   Word  1: 3F79   XT NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
