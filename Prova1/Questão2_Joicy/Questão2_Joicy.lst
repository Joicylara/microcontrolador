CCS PCM C Compiler, Version 4.104, 5967               01-ago-24 17:32

               Filename: C:\Users\JOICE\OneDrive\Documentos\Faculdade\microcontrolador\Prova1\Questão2_Joicy\Questão2_Joicy.lst

               ROM used: 104 words (1%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         7 (2%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... //#include "C:\Users\JOICE\OneDrive\Documentos\Faculdade\microcontrolador\Prova1\Questão2_Joicy\Questão2_Joicy.h" 
....................  
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
....................  
....................  
.................... void main() 
.................... { 
*
0004:  CLRF   04
0005:  BCF    03.7
0006:  MOVLW  1F
0007:  ANDWF  03,F
0008:  BSF    03.5
0009:  BSF    1F.0
000A:  BSF    1F.1
000B:  BSF    1F.2
000C:  BCF    1F.3
000D:  MOVLW  07
000E:  MOVWF  1C
....................  
....................    setup_adc_ports(AN0); 
*
0012:  BSF    03.5
0013:  BCF    1F.0
0014:  BSF    1F.1
0015:  BSF    1F.2
0016:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
0017:  BCF    1F.6
0018:  BCF    03.5
0019:  BCF    1F.6
001A:  BCF    1F.7
001B:  BSF    03.5
001C:  BSF    1F.7
001D:  BCF    03.5
001E:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
001F:  BSF    03.5
0020:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0021:  BCF    03.5
0022:  BCF    14.5
0023:  BCF    20.5
0024:  MOVF   20,W
0025:  BSF    03.5
0026:  MOVWF  07
0027:  BCF    03.5
0028:  BSF    20.4
0029:  MOVF   20,W
002A:  BSF    03.5
002B:  MOVWF  07
002C:  BCF    03.5
002D:  BCF    20.3
002E:  MOVF   20,W
002F:  BSF    03.5
0030:  MOVWF  07
0031:  MOVLW  01
0032:  BCF    03.5
0033:  MOVWF  14
0034:  MOVLW  00
0035:  BSF    03.5
0036:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0037:  MOVF   01,W
0038:  ANDLW  C7
0039:  IORLW  08
003A:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
003B:  BCF    03.5
003C:  CLRF   10
....................    setup_timer_2(T2_DIV_BY_1,0,1); 
003D:  MOVLW  00
003E:  MOVWF  78
003F:  IORLW  04
0040:  MOVWF  12
0041:  MOVLW  00
0042:  BSF    03.5
0043:  MOVWF  12
....................    setup_ccp1(CCP_PWM); 
0044:  BCF    03.5
0045:  BCF    20.2
0046:  MOVF   20,W
0047:  BSF    03.5
0048:  MOVWF  07
0049:  BCF    03.5
004A:  BCF    07.2
004B:  MOVLW  0C
004C:  MOVWF  17
....................     
....................    setup_comparator(NC_NC_NC_NC); 
004D:  MOVLW  07
004E:  BSF    03.5
004F:  MOVWF  1C
0050:  MOVF   05,W
0051:  MOVWF  05
0052:  MOVLW  10
0053:  MOVWF  77
0054:  DECFSZ 77,F
0055:  GOTO   054
0056:  NOP
0057:  MOVF   1C,W
0058:  BCF    03.5
0059:  BCF    0D.6
....................    setup_vref(FALSE); 
005A:  BSF    03.5
005B:  CLRF   1D
....................  
....................  
....................    int8 potenciometro; 
....................  
....................    while(true){ 
....................    potenciometro = read_adc(); 
005C:  BCF    03.5
005D:  BSF    1F.2
005E:  BTFSC  1F.2
005F:  GOTO   05E
0060:  BSF    03.5
0061:  MOVF   1E,W
0062:  BCF    03.5
0063:  MOVWF  21
....................       set_pwm1_duty(potenciometro); 
0064:  MOVF   21,W
0065:  MOVWF  15
....................    } 
0066:  GOTO   05D
....................  
.................... } 
0067:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
